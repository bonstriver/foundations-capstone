"My pleasure, let's rock." -Jack Stratton

FOUNDATIONS CAPSTONE PROJECT
    OVERVIEW
        Today you’ll start building a solo project! You’ll have about the next week and a half to work on this. The time is roughly equivalent to 6 lab exercises, so keep that in mind when you’re figuring out the scope of your project.

        Basic Requirements
            Planning documentation
                
            Needs to have an interactive front end (inputs, buttons, etc.)

            Should have at least 3 main features

            Includes styling

            Connects to a server and makes requests from the front end (express and axios)

            2-3 minute presentation

CHECKLIST
Overview
    Remember: you do not have to include every single item! 14 is the minimum.

    The required items are starred.

Planning
    project includes a wireframe for each view

    project includes a list of MVP features *
        -yes (below, right?)
    project includes a data model
        (should the data model be ready now?)
MVP
    app has at least 3 main features *
        -view album tracklists
        -post/delete custom playlist
        -sort data by...(name, release, album, etc.)
    front end makes a request to the server and handles the response *
        -(same as above/below?)
    front end is interactive *
        -sorting, post new playlist, delete playlist
    app has custom styling *
        -yes (not sure what to say here, but it can be arranged)
Front End
    app has at least 5 semantic tags *
        -header
        -footer
        -nav
        -main
        -section
    app includes 1 view *
        -album list
    app includes 1+ additional view(s)
        -playlist creation/deletion
    styling includes flexbox

    at least 1 view is responsive
        -can be arranged
    styling includes animations

Server
    app includes a GET endpoint and handler function *
        -GET data from Spotify API
    app includes a POST endpoint and handler function *
        -POST new playlist
    app includes a PUT endpoint and handler function

    app includes a DELETE endpoint and handler function
        -DELETE playlist
    app utilizes Sequelize
        -yes (will need SQL database)
    project includes at least 1 controller file

Database (The app will fulfill each of these)
    project includes a seed file or function

    app uses 1 table

    app uses 1+ additional tables

    app uses a foreign key and join

Presentation
    discusses project purpose and demonstrates MVP *
        -can be arranged
    does not discuss broken/unimplemented features
        -can be arranged
    recording is between 2-3 minutes
        -can be arranged
    INSTRUCTIONS
        Planning
            It’s difficult to plan a software project the first few times. Your plans will not be perfect, and that’s okay. Try to make your plan as comprehensive as you can – it will help you throughout the process. And don’t be afraid to update your plan as you go.

            Start out brainstorming - look through projects we’ve done and read through the ideas at the bottom of this page.

            List out your 3+ MVP (minimum viable product) features. Name your project.

            Wireframe your page(s).

            Make a to do list for coding. It’s okay if this isn’t comprehensive, just try to give yourself a little structure.

            When you have your features, app name, wireframe(s), and to do list, pass off your plan with a staff member.

            Make adjustments if needed.

            Set up a folder on your computer and a remote repo on GitHub. Connect them. Upload your completed planning documentation to your repo.

    CODING
        You can choose how you want to do this, but here’s a suggested work flow if you’re feeling stuck:

            Start by creating HTML, CSS, and JS files and linking them together for the front end.

            Set up a basic server for your back end.

            Build the HTML for your first feature.

            Write the JavaScript for your first feature (front and back).

            Add in CSS for that section of the page.

            Repeat the process for your other 2 features.

            Polish the layout and styling of the page.

            Add any additional features.

    IDEAS & EXAMPLES
        Ideas
            Choose a previous lab exercise from Foundations to build on.

            Use a previous lab as inspiration and create a similar project.

            Come up with your own idea!

        Examples
            Magic 8 Ball. Your 3 features might be:

                Users can enter questions

                Users get randomized answers to their questions

                Users can save responses (until you refresh the page)

            Trip List. Your 3 features might be:

                User can add a location to a “Want to Visit” or a “Visited” list

                User can delete items from their lists

                User can view one or both lists

            Calculator. Your 3 features might be:

                User can add, subtract, multiply, or divide numbers

                User can continue calculation on a given answer (press 2 + 3 = and then can do * 10 to the 5 that’s returned)

                User can save amounts (for budgeting or figuring out complex problems)